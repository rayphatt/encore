.carousel {
  position: relative;
  width: 100%;
  overflow: hidden;
  border-radius: var(--card-border-radius);
}

.carouselContainer {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.carouselContent {
  width: 100%;
  height: 100%;
  position: relative;
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.image:hover {
  transform: scale(1.02);
}

.videoContainer {
  position: relative;
  width: 100%;
  height: 100%;
  aspect-ratio: 16/9;
}

.video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: var(--card-border-radius);
}

.playButton {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.7);
  color: white;
  border: none;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  font-size: 24px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  z-index: 10;
}

.playButton:hover {
  background: rgba(0, 0, 0, 0.8);
  transform: translate(-50%, -50%) scale(1.1);
}

.playButton.playing {
  opacity: 0.7;
}

.carouselButton {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  font-size: 20px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  z-index: 10;
}

.carouselButton:hover {
  background: rgba(0, 0, 0, 0.7);
}

.prevButton {
  left: 10px;
}

.nextButton {
  right: 10px;
}

.dots {
  display: flex;
  justify-content: center;
  gap: var(--spacing-xs);
  margin-top: var(--spacing-sm);
  padding: var(--spacing-sm);
}

.dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--color-border);
  border: none;
  cursor: pointer;
  transition: background 0.2s ease;
}

.dot:hover {
  background: var(--color-text-light);
}

.activeDot {
  background: var(--color-primary);
}

/* Grid Layout Styles */
.mediaGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  gap: var(--spacing-xs);
  height: 80px; /* Match width for square thumbnails */
  align-items: center;
}

/* Single item - show as larger left-aligned thumbnail */
.mediaGrid.singleItem {
  grid-template-columns: repeat(auto-fill, 150px) !important; /* Larger width and auto-fill for wrapping */
  justify-content: start !important; /* Align to left */
  height: auto !important; /* Allow height to adjust for wrapping */
  min-height: 150px !important; /* Minimum height for single item */
  gap: var(--spacing-sm) !important; /* Add gap between items */
}

.gridItem {
  aspect-ratio: 1;
  border-radius: var(--border-radius) !important;
  overflow: hidden !important;
  cursor: pointer;
  transition: transform 0.2s ease;
  position: relative;
  width: 80px; /* Force square width */
  height: 80px; /* Force square height */
}

/* Single item styling - larger thumbnail (applies to 5 or fewer items) */
.mediaGrid.singleItem .gridItem {
  width: 150px !important; /* Larger width for single item */
  height: 150px !important; /* Larger height for single item */
  border-radius: var(--border-radius) !important; /* Ensure rounded corners */
  overflow: hidden !important;
}

.gridItem:hover {
  transform: scale(1.05);
}

.gridImage {
  width: 100% !important;
  height: 100% !important;
  object-fit: cover;
  border-radius: var(--border-radius) !important; /* Add rounded corners to images */
  display: block !important;
}

/* Additional specificity for images */
.mediaGrid .gridItem img,
.mediaGrid.singleItem .gridItem img,
.gridImage {
  border-radius: var(--border-radius) !important;
  overflow: hidden !important;
}

/* Force rounded corners on all images in carousel */
.carousel img,
.carousel .gridImage,
.carousel .gridItem img {
  border-radius: var(--border-radius) !important;
  overflow: hidden !important;
  clip-path: inset(0 0 0 0 round var(--border-radius)) !important;
}

/* Additional specificity for single item images */
.mediaGrid.singleItem .gridItem img {
  border-radius: var(--border-radius) !important;
  overflow: hidden !important;
  width: 100% !important;
  height: 100% !important;
  object-fit: cover !important;
  clip-path: inset(0 0 0 0 round var(--border-radius)) !important;
}

.gridVideoContainer {
  width: 100%;
  height: 100%;
  position: relative;
  aspect-ratio: 1;
  border-radius: var(--border-radius) !important; /* Add rounded corners to video containers */
  overflow: hidden !important;
}

.gridVideo {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: var(--border-radius) !important; /* Add rounded corners to videos */
  display: block !important;
}

.gridPlayButton {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  font-size: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

/* Mobile optimizations */
@media (max-width: 768px) {
  .carouselButton {
    width: 32px;
    height: 32px;
    font-size: 16px;
  }

  .playButton {
    width: 48px;
    height: 48px;
    font-size: 20px;
  }

  .dots {
    margin-top: var(--spacing-xs);
    padding: var(--spacing-xs);
  }

  .dot {
    width: 6px;
    height: 6px;
  }

  .mediaGrid {
    grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
    gap: var(--spacing-xs);
    height: 60px; /* Match width for square thumbnails on mobile */
  }

  /* Single item - show as larger thumbnail on mobile */
  .mediaGrid.singleItem {
    grid-template-columns: repeat(auto-fill, 120px) !important; /* Larger width for single item on mobile */
    justify-content: start !important; /* Align to left */
    height: auto !important; /* Allow height to adjust for wrapping */
    min-height: 120px !important; /* Minimum height for single item on mobile */
    gap: var(--spacing-sm) !important; /* Add gap between items */
  }

  .gridItem {
    width: 60px; /* Force square width on mobile */
    height: 60px; /* Force square height on mobile */
  }

  /* Single item styling - larger thumbnail on mobile */
  .mediaGrid.singleItem .gridItem {
    width: 120px !important; /* Larger width for single item on mobile */
    height: 120px !important; /* Larger height for single item on mobile */
    border-radius: var(--border-radius) !important; /* Ensure rounded corners */
    overflow: hidden !important;
  }

  .gridPlayButton {
    width: 24px;
    height: 24px;
    font-size: 12px;
  }
} 